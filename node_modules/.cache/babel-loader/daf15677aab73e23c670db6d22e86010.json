{"remainingRequest":"D:\\2021graduate\\graduation\\node_modules\\babel-loader\\lib\\index.js!D:\\2021graduate\\graduation\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\2021graduate\\graduation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\2021graduate\\graduation\\src\\views\\myaudio.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\2021graduate\\graduation\\src\\views\\myaudio.vue","mtime":1611502915899},{"path":"D:\\2021graduate\\graduation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594033213228},{"path":"D:\\2021graduate\\graduation\\node_modules\\babel-loader\\lib\\index.js","mtime":1594033213222},{"path":"D:\\2021graduate\\graduation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594033213228},{"path":"D:\\2021graduate\\graduation\\node_modules\\vue-loader\\lib\\index.js","mtime":1594033220124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6LzIwMjFncmFkdWF0ZS9ncmFkdWF0aW9uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHNvbmdMaXN0IGZyb20gJy4uL2NvbXBvbmVudHMvY29tbW9uL3NvbmdMaXN0L0luZGV4JzsKaW1wb3J0IHsgY3JlYXRlU29uZyB9IGZyb20gJ0AvbW9kZWwvc29uZyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc29uZ3M6IFtdCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgc29uZ0xpc3Q6IHNvbmdMaXN0CiAgfSwKICAvLyDnm5HlkKzlsZ7mgKcg57G75Ly85LqOZGF0YeamguW/tQogIGNvbXB1dGVkOiB7fSwKICAvLyDnm5HmjqdkYXRh5Lit55qE5pWw5o2u5Y+Y5YyWCiAgd2F0Y2g6IHt9LAogIC8vIOaWueazlembhuWQiAogIG1ldGhvZHM6IHsKICAgIC8vIOiOt+WPluaOqOiNkOaWsOmfs+S5kAogICAgZ2V0TmV3U29uZ3M6IGZ1bmN0aW9uIGdldE5ld1NvbmdzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzLCBsaXN0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGFwaS5nZXROZXdTb25ncygpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgbGlzdCA9IFtdOwoKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIHJlcy5yZXN1bHQubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgbGlzdC5wdXNoKGl0ZW0uaWQpOwogICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgIF90aGlzLmdldFNvbmdEZXRhaWwobGlzdCk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA4OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgOF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g6I635Y+W5q2M5puy5YiX6KGoCiAgICBnZXRTb25nRGV0YWlsOiBmdW5jdGlvbiBnZXRTb25nRGV0YWlsKHNsaWNlQXJyKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHRpbWVzdGFtcCwgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnZhbHVlT2YoKTsKICAgICAgICAgICAgICAgIHNsaWNlQXJyID0gc2xpY2VBcnIuam9pbignLCcpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kYXBpLmdldFNvbmdEZXRhaWwoc2xpY2VBcnIsIHRpbWVzdGFtcCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMyLnNvbmdzID0gX3RoaXMyLl9ub3JtYWxpemVTb25ncyhyZXMuc29uZ3MpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX3RoaXMyLnNvbmdzKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMik7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMiwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIOWkhOeQhuatjOabsgogICAgX25vcm1hbGl6ZVNvbmdzOiBmdW5jdGlvbiBfbm9ybWFsaXplU29uZ3MobGlzdCkgewogICAgICB2YXIgcmV0ID0gW107CiAgICAgIGxpc3QubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgaWYgKGl0ZW0uaWQpIHsKICAgICAgICAgIHJldC5wdXNoKGNyZWF0ZVNvbmcoaXRlbSkpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiByZXQ7CiAgICB9CiAgfSwKICAvLyDnlJ/lkb3lkajmnJ8gLSDliJvlu7rlrozmiJDvvIjlj6/ku6Xorr/pl67lvZPliY10aGlz5a6e5L6L77yJCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHt9LAogIC8vIOeUn+WRveWRqOacnyAtIOaMgui9veWujOaIkO+8iOWPr+S7peiuv+mXrkRPTeWFg+e0oO+8iQogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldE5ld1NvbmdzKCk7CiAgfQp9Ow=="},{"version":3,"sources":["myaudio.vue"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAA,QAAA,MAAA,qCAAA;AACA,SAAA,UAAA,QAAA,cAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GANA;AASA;AACA,EAAA,QAAA,EAAA,EAVA;AAWA;AACA,EAAA,KAAA,EAAA,EAZA;AAaA;AACA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,WAFA,yBAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,IAAA,CAAA,WAAA,EAFA;;AAAA;AAEA,gBAAA,GAFA;AAGA,gBAAA,IAHA,GAGA,EAHA;;AAIA,oBAAA,GAAA,CAAA,IAAA,KAAA,GAAA,EAAA;AACA,kBAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,oBAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA;AACA,mBAFA;;AAGA,kBAAA,KAAA,CAAA,aAAA,CAAA,IAAA;AACA;;AATA;AAAA;;AAAA;AAAA;AAAA;AAWA,gBAAA,OAAA,CAAA,GAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,KAfA;AAgBA;AACA,IAAA,aAjBA,yBAiBA,QAjBA,EAiBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,SADA,GACA,IAAA,IAAA,GAAA,OAAA,EADA;AAEA,gBAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AAFA;AAAA;AAAA,uBAIA,MAAA,CAAA,IAAA,CAAA,aAAA,CAAA,QAAA,EAAA,SAAA,CAJA;;AAAA;AAIA,gBAAA,GAJA;AAKA,gBAAA,MAAA,CAAA,KAAA,GAAA,MAAA,CAAA,eAAA,CAAA,GAAA,CAAA,KAAA,CAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,KAAA;AANA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,KA1BA;AA2BA;AACA,IAAA,eA5BA,2BA4BA,IA5BA,EA4BA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,MAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,EAAA,EAAA;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA;AACA,OAJA;AAKA,aAAA,GAAA;AACA;AApCA,GAdA;AAoDA;AACA,EAAA,OArDA,qBAqDA,CAAA,CArDA;AAsDA;AACA,EAAA,OAvDA,qBAuDA;AACA,SAAA,WAAA;AACA;AAzDA,CAAA","sourcesContent":["<template>\r\n  <div class=\"recommend-music\">\r\n    <h2 class=\"title\">推荐新歌曲</h2>\r\n    <song-list :songList=\"songs\"></song-list>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport songList from '../components/common/songList/Index'\r\nimport { createSong } from '@/model/song'\r\nexport default {\r\n  data () {\r\n    return {\r\n      songs: []\r\n    }\r\n  },\r\n  components: {\r\n    songList\r\n  },\r\n  // 监听属性 类似于data概念\r\n  computed: {},\r\n  // 监控data中的数据变化\r\n  watch: {},\r\n  // 方法集合\r\n  methods: {\r\n    // 获取推荐新音乐\r\n    async getNewSongs () {\r\n      try {\r\n        const res = await this.$api.getNewSongs()\r\n        const list = []\r\n        if (res.code === 200) {\r\n          res.result.map(item => {\r\n            list.push(item.id)\r\n          })\r\n          this.getSongDetail(list)\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    },\r\n    // 获取歌曲列表\r\n    async getSongDetail (sliceArr) {\r\n      const timestamp = new Date().valueOf()\r\n      sliceArr = sliceArr.join(',')\r\n      try {\r\n        const res = await this.$api.getSongDetail(sliceArr, timestamp)\r\n        this.songs = this._normalizeSongs(res.songs)\r\n        console.log(this.songs)\r\n      } catch (error) {\r\n      }\r\n    },\r\n    // 处理歌曲\r\n    _normalizeSongs (list) {\r\n      const ret = []\r\n      list.map(item => {\r\n        if (item.id) {\r\n          ret.push(createSong(item))\r\n        }\r\n      })\r\n      return ret\r\n    }\r\n  },\r\n  // 生命周期 - 创建完成（可以访问当前this实例）\r\n  created () {},\r\n  // 生命周期 - 挂载完成（可以访问DOM元素）\r\n  mounted () {\r\n    this.getNewSongs()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.recommend-music {\r\n  .title {\r\n    margin: 0 0 15px 0;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}