{"remainingRequest":"D:\\2021graduate\\graduation\\node_modules\\babel-loader\\lib\\index.js!D:\\2021graduate\\graduation\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\2021graduate\\graduation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\2021graduate\\graduation\\node_modules\\vue-aplayer\\src\\vue-aplayer.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\2021graduate\\graduation\\node_modules\\vue-aplayer\\src\\vue-aplayer.vue","mtime":1612070388741},{"path":"D:\\2021graduate\\graduation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594033213228},{"path":"D:\\2021graduate\\graduation\\node_modules\\babel-loader\\lib\\index.js","mtime":1594033213222},{"path":"D:\\2021graduate\\graduation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594033213228},{"path":"D:\\2021graduate\\graduation\\node_modules\\vue-loader\\lib\\index.js","mtime":1594033220124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["vue-aplayer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"aplayer\"\n    :class=\"{\n      'aplayer-narrow': isMiniMode,\n      'aplayer-withlist' : !isMiniMode && musicList.length > 0,\n      'aplayer-withlrc': !isMiniMode && (!!$slots.display || shouldShowLrc),\n      'aplayer-float': isFloatMode,\n      'aplayer-loading': isPlaying && isLoading\n    }\"\n    :style=\"floatStyleObj\"\n  >\n    <div class=\"aplayer-body\">\n      <thumbnail\n        :pic=\"currentMusic.pic\"\n        :playing=\"isPlaying\"\n        :enable-drag=\"isFloatMode\"\n        :theme=\"currentTheme\"\n        @toggleplay=\"toggle\"\n        @dragbegin=\"onDragBegin\"\n        @dragging=\"onDragAround\"\n      />\n      <div class=\"aplayer-info\" v-show=\"!isMiniMode\">\n        <div class=\"aplayer-music\">\n          <span class=\"aplayer-title\">{{ currentMusic.title || 'Untitled' }}</span>\n          <span class=\"aplayer-author\">{{ currentMusic.artist || currentMusic.author || 'Unknown' }}</span>\n        </div>\n        <slot name=\"display\" :current-music=\"currentMusic\" :play-stat=\"playStat\">\n          <lyrics :current-music=\"currentMusic\" :play-stat=\"playStat\" v-if=\"shouldShowLrc\" />\n        </slot>\n        <controls\n          :shuffle=\"shouldShuffle\"\n          :repeat=\"repeatMode\"\n          :stat=\"playStat\"\n          :volume=\"audioVolume\"\n          :muted=\"isAudioMuted\"\n          :theme=\"currentTheme\"\n          @toggleshuffle=\"shouldShuffle = !shouldShuffle\"\n          @togglelist=\"showList = !showList\"\n          @togglemute=\"toggleMute\"\n          @setvolume=\"setAudioVolume\"\n          @dragbegin=\"onProgressDragBegin\"\n          @dragend=\"onProgressDragEnd\"\n          @dragging=\"onProgressDragging\"\n          @nextmode=\"setNextMode\"\n        />\n      </div>\n    </div>\n    <audio ref=\"audio\"></audio>\n    <music-list\n      :show=\"showList && !isMiniMode\"\n      :current-music=\"currentMusic\"\n      :music-list=\"musicList\"\n      :play-index=\"playIndex\"\n      :listmaxheight=\"listmaxheight || listMaxHeight\"\n      :theme=\"currentTheme\"\n      @selectsong=\"onSelectSong\"\n    />\n  </div>\n</template>\n<script type=\"text/babel\">\n  import Vue from 'vue'\n  import Thumbnail from './components/aplayer-thumbnail.vue'\n  import MusicList from './components/aplayer-list.vue'\n  import Controls from './components/aplayer-controller.vue'\n  import Lyrics from './components/aplayer-lrc.vue'\n  import { deprecatedProp, versionCompare, warn } from './utils'\n\n  let versionBadgePrinted = false\n  const canUseSync = versionCompare(Vue.version, '2.3.0') >= 0\n\n  /**\n   * memorize self-adapting theme for cover image urls\n   * @type {Object.<url, rgb()>}\n   */\n  const picThemeCache = {}\n\n  // mutex playing instance\n  let activeMutex = null\n\n\n  const REPEAT = {\n    NONE: 'none',\n    MUSIC: 'music',\n    LIST: 'list',\n    NO_REPEAT: 'no-repeat',\n    REPEAT_ONE: 'repeat-one',\n    REPEAT_ALL: 'repeat-all',\n  };\n\n  const VueAPlayer = {\n    name: 'APlayer',\n    disableVersionBadge: false,\n    components: {\n      Thumbnail,\n      Controls,\n      MusicList,\n      Lyrics,\n    },\n    props: {\n      music: {\n        type: Object,\n        required: true,\n        validator (song) {\n          if (song.url) {\n            deprecatedProp('music.url', '1.4.0', 'music.src')\n          }\n          if (song.author) {\n            deprecatedProp('music.author', '1.4.1', 'music.artist')\n          }\n          return song.src || song.url\n        },\n      },\n      list: {\n        type: Array,\n        default () {\n          return []\n        },\n      },\n      mini: {\n        type: Boolean,\n        default: false,\n      },\n      showLrc: {\n        type: Boolean,\n        default: false,\n      },\n      mutex: {\n        type: Boolean,\n        default: true,\n      },\n      theme: {\n        type: String,\n        default: '#41b883',\n      },\n\n      listMaxHeight: String,\n      /**\n       * @since 1.4.1\n       * Fold playlist initially\n       */\n      listFolded: {\n        type: Boolean,\n        default: false,\n      },\n\n      /**\n       * @since 1.2.0 Float mode\n       */\n      float: {\n        type: Boolean,\n        default: false,\n      },\n\n      // Audio attributes as props\n      // since 1.4.0\n      // autoplay controls muted preload volume\n      // autoplay is not observable\n\n      /**\n       * @since 1.4.0\n       * not observable\n       */\n      autoplay: {\n        type: Boolean,\n        default: false,\n      },\n\n      /**\n       * @since 1.4.0\n       * whether to show native audio controls below Vue-APlayer\n       * only work in development environment and not mini mode\n       *\n       * observable\n       */\n      controls: {\n        type: Boolean,\n        default: false,\n      },\n\n      /**\n       * @since 1.4.0\n       * observable, sync\n       */\n      muted: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * @since 1.4.0\n       * observable\n       */\n      preload: String,\n\n      /**\n       * @since 1.4.0\n       * observable, sync\n       */\n      volume: {\n        type: Number,\n        default: 0.8,\n        validator (value) {\n          return value >= 0 && value <= 1\n        },\n      },\n\n      // play order control\n      // since 1.5.0\n\n      /**\n       * @since 1.5.0\n       * @see https://support.apple.com/en-us/HT207230\n       * twoWay\n       */\n      shuffle: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * @since 1.5.0\n       * @see https://support.apple.com/en-us/HT207230\n       * twoWay\n       */\n      repeat: {\n        type: String,\n        default: REPEAT.NO_REPEAT,\n      },\n\n\n      // deprecated props\n\n      /**\n       * @deprecated since 1.1.2, use listMaxHeight instead\n       */\n      listmaxheight: {\n        type: String,\n        validator (value) {\n          if (value) {\n            deprecatedProp('listmaxheight', '1.1.2', 'listMaxHeight')\n          }\n          return true\n        },\n      },\n      /**\n       * @deprecated since 1.1.2, use mini instead\n       */\n      narrow: {\n        type: Boolean,\n        default: false,\n        validator (value) {\n          if (value) {\n            deprecatedProp('narrow', '1.1.2', 'mini')\n          }\n          return true\n        },\n      },\n      /**\n       * @deprecated since 1.2.2\n       */\n      showlrc: {\n        type: Boolean,\n        default: false,\n        validator (value) {\n          if (value) {\n            deprecatedProp('showlrc', '1.2.2', 'showLrc')\n          }\n          return true\n        },\n      },\n      /**\n       * @deprecated and REMOVED since 1.5.0\n       */\n      // mode: {\n      //   type: String,\n      //   default: 'circulation',\n      //   validator (value) {\n      //     if (value) {\n      //       deprecatedProp('mode', '1.5.0', 'shuffle and repeat')\n      //     }\n      //     return true\n      //   }\n      // },\n    },\n    data () {\n      return {\n        internalMusic: this.music,\n        isPlaying: false,\n        isSeeking: false,\n        wasPlayingBeforeSeeking: false,\n        isMobile: /mobile/i.test(window.navigator.userAgent),\n        playStat: {\n          duration: 0,\n          loadedTime: 0,\n          playedTime: 0,\n        },\n        showList: !this.listFolded,\n\n        // handle Promise returned from audio.play()\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/play\n        audioPlayPromise: Promise.resolve(),\n\n\n        // @since 1.2.0 float mode\n\n        floatOriginX: 0,\n        floatOriginY: 0,\n        floatOffsetLeft: 0,\n        floatOffsetTop: 0,\n\n\n        // @since 1.3.0 self adapting theme\n        selfAdaptingTheme: null,\n\n\n        // @since 1.4.0\n        // sync muted, volume\n\n        internalMuted: this.muted,\n        internalVolume: this.volume,\n\n        // @since 1.4.1\n        // Loading indicator\n        isLoading: false,\n\n\n        // @since 1.5.1\n        // sync shuffle, repeat\n        internalShuffle: this.shuffle,\n        internalRepeat: this.repeat,\n        // for shuffling\n        shuffledList: [],\n      }\n    },\n    computed: {\n      // alias for $refs.audio\n      audio () {\n        return this.$refs.audio\n      },\n\n      // sync music\n      currentMusic: {\n        get () {\n          return this.internalMusic\n        },\n        set (val) {\n          canUseSync && this.$emit('update:music', val)\n          this.internalMusic = val\n        },\n      },\n      // compatible for deprecated props\n      isMiniMode () {\n        return this.mini || this.narrow\n      },\n      shouldShowLrc () {\n        return this.showLrc || this.showlrc\n      },\n\n      // props wrappers\n\n      currentTheme () {\n        return this.selfAdaptingTheme || this.currentMusic.theme || this.theme\n      },\n      isFloatMode () {\n        return this.float && !this.isMobile\n      },\n      shouldAutoplay () {\n        if (this.isMobile) return false\n        return this.autoplay\n      },\n      musicList () {\n        return this.list\n      },\n      shouldShowNativeControls () {\n        return process.env.NODE_ENV !== 'production' &&\n          this.controls &&\n          !this.isMiniMode\n      },\n\n      // useful\n\n      floatStyleObj () {\n        // transform: translate(floatOffsetLeft, floatOffsetY)\n        return {\n          transform: `translate(${this.floatOffsetLeft}px, ${this.floatOffsetTop}px)`,\n          webkitTransform: `translate(${this.floatOffsetLeft}px, ${this.floatOffsetTop}px)`,\n        }\n      },\n      currentPicStyleObj () {\n        if (this.currentMusic && this.currentMusic.pic) {\n          return {\n            backgroundImage: `url(${this.currentMusic.pic})`,\n          }\n        }\n        return {}\n      },\n      loadProgress () {\n        if (this.playStat.duration === 0) return 0\n        return this.playStat.loadedTime / this.playStat.duration\n      },\n      playProgress () {\n        if (this.playStat.duration === 0) return 0\n        return this.playStat.playedTime / this.playStat.duration\n      },\n      playIndex: {\n        get () {\n          return this.shuffledList.indexOf(this.currentMusic)\n        },\n        set (val) {\n          this.currentMusic = this.shuffledList[val % this.shuffledList.length]\n        },\n      },\n      shouldRepeat () {\n        return this.repeatMode !== REPEAT.NO_REPEAT\n      },\n\n      // since 1.4.0\n      // sync muted, volume\n\n      isAudioMuted: {\n        get () {\n          return this.internalMuted\n        },\n        set (val) {\n          canUseSync && this.$emit('update:muted', val)\n          this.internalMuted = val\n        },\n      },\n      audioVolume: {\n        get () {\n          return this.internalVolume\n        },\n        set (val) {\n          canUseSync && this.$emit('update:volume', val)\n          this.internalVolume = val\n        },\n      },\n\n\n      // since 1.5.0\n      // sync shuffle, repeat\n      shouldShuffle: {\n        get () {\n          return this.internalShuffle\n        },\n        set (val) {\n          canUseSync && this.$emit('update:shuffle', val)\n          this.internalShuffle = val\n        },\n      },\n      repeatMode: {\n        get () {\n          switch (this.internalRepeat) {\n            case REPEAT.NONE:\n            case REPEAT.NO_REPEAT:\n              return REPEAT.NO_REPEAT\n            case REPEAT.MUSIC:\n            case REPEAT.REPEAT_ONE:\n              return REPEAT.REPEAT_ONE\n            default:\n              return REPEAT.REPEAT_ALL\n          }\n        },\n        set (val) {\n          canUseSync && this.$emit('update:repeat', val)\n          this.internalRepeat = val\n        },\n      },\n    },\n    methods: {\n      // Float mode\n\n      onDragBegin () {\n        this.floatOriginX = this.floatOffsetLeft\n        this.floatOriginY = this.floatOffsetTop\n      },\n      onDragAround ({ offsetLeft, offsetTop }) {\n        this.floatOffsetLeft = this.floatOriginX + offsetLeft\n        this.floatOffsetTop = this.floatOriginY + offsetTop\n      },\n\n      // functions\n\n      setNextMode () {\n        if (this.repeatMode === REPEAT.REPEAT_ALL) {\n          this.repeatMode = REPEAT.REPEAT_ONE\n        } else if (this.repeatMode === REPEAT.REPEAT_ONE) {\n          this.repeatMode = REPEAT.NO_REPEAT\n        } else {\n          this.repeatMode = REPEAT.REPEAT_ALL\n        }\n      },\n      thenPlay () {\n        this.$nextTick(() => {\n          this.play()\n        })\n      },\n\n      // controls\n\n      // play/pause\n\n      toggle () {\n        if (!this.audio.paused) {\n          this.pause()\n        } else {\n          this.play()\n        }\n      },\n      play () {\n        if (this.mutex) {\n          if (activeMutex && activeMutex !== this) {\n            activeMutex.pause()\n          }\n          activeMutex = this\n        }\n        // handle .play() Promise\n        const audioPlayPromise = this.audio.play()\n        if (audioPlayPromise) {\n          return this.audioPlayPromise = new Promise((resolve, reject) => {\n            // rejectPlayPromise is to force reject audioPlayPromise if it's still pending when pause() is called\n            this.rejectPlayPromise = reject\n            audioPlayPromise.then((res) => {\n              this.rejectPlayPromise = null\n              resolve(res)\n            }).catch(warn)\n          })\n        }\n      },\n      pause () {\n        this.audioPlayPromise\n          .then(() => {\n            this.audio.pause()\n          })\n          // Avoid force rejection throws Uncaught\n          .catch(() => {\n            this.audio.pause()\n          })\n\n        // audioPlayPromise is still pending\n        if (this.rejectPlayPromise) {\n          // force reject playPromise\n          this.rejectPlayPromise()\n          this.rejectPlayPromise = null\n        }\n      },\n\n      // progress bar\n\n      onProgressDragBegin (val) {\n        this.wasPlayingBeforeSeeking = this.isPlaying\n        this.pause()\n        this.isSeeking = true\n\n        // handle load failures\n        if (!isNaN(this.audio.duration)) {\n          this.audio.currentTime = this.audio.duration * val\n        }\n      },\n      onProgressDragging (val) {\n        if (isNaN(this.audio.duration)) {\n          this.playStat.playedTime = 0\n        } else {\n          this.audio.currentTime = this.audio.duration * val\n        }\n      },\n      onProgressDragEnd (val) {\n        this.isSeeking = false\n\n        if (this.wasPlayingBeforeSeeking) {\n          this.thenPlay()\n        }\n      },\n\n      // volume\n\n      toggleMute () {\n        this.setAudioMuted(!this.audio.muted)\n      },\n      setAudioMuted (val) {\n        this.audio.muted = val\n      },\n      setAudioVolume (val) {\n        this.audio.volume = val\n        if (val > 0) {\n          this.setAudioMuted(false)\n        }\n      },\n\n      // playlist\n\n      getShuffledList () {\n        if (!this.list.length) {\n          return [this.internalMusic]\n        }\n        let unshuffled = [...this.list]\n        if (!this.internalShuffle || unshuffled.length <= 1) {\n          return unshuffled\n        }\n\n        let indexOfCurrentMusic = unshuffled.indexOf(this.internalMusic)\n        if (unshuffled.length === 2 && indexOfCurrentMusic !== -1) {\n          if (indexOfCurrentMusic === 0) {\n            return unshuffled\n          } else {\n            return [this.internalMusic, unshuffled[0]]\n          }\n        }\n        // shuffle list\n        // @see https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\n        for (let i = unshuffled.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1))\n          const tmp = unshuffled[i]\n          unshuffled[i] = unshuffled[j]\n          unshuffled[j] = tmp\n        }\n\n        // take currentMusic to first\n        if (indexOfCurrentMusic !== -1) {\n          indexOfCurrentMusic = unshuffled.indexOf(this.internalMusic)\n          if (indexOfCurrentMusic !== 0) {\n            [unshuffled[0], unshuffled[indexOfCurrentMusic]] = [unshuffled[indexOfCurrentMusic], unshuffled[0]]\n          }\n        }\n\n        return unshuffled\n      },\n\n      onSelectSong (song) {\n        if (this.currentMusic === song) {\n          this.toggle()\n        } else {\n          this.currentMusic = song\n          this.thenPlay()\n        }\n      },\n\n      // event handlers\n      // for keeping up with audio states\n\n      onAudioPlay () {\n        this.isPlaying = true\n      },\n      onAudioPause () {\n        this.isPlaying = false\n      },\n      onAudioWaiting () {\n        this.isLoading = true\n      },\n      onAudioCanplay () {\n        this.isLoading = false\n      },\n      onAudioDurationChange () {\n        if (this.audio.duration !== 1) {\n          this.playStat.duration = this.audio.duration\n        }\n      },\n      onAudioProgress () {\n        if (this.audio.buffered.length) {\n          this.playStat.loadedTime = this.audio.buffered.end(this.audio.buffered.length - 1)\n        } else {\n          this.playStat.loadedTime = 0\n        }\n      },\n      onAudioTimeUpdate () {\n        this.playStat.playedTime = this.audio.currentTime\n      },\n      onAudioSeeking () {\n        this.playStat.playedTime = this.audio.currentTime\n      },\n      onAudioSeeked () {\n        this.playStat.playedTime = this.audio.currentTime\n      },\n      onAudioVolumeChange () {\n        this.audioVolume = this.audio.volume\n        this.isAudioMuted = this.audio.muted\n      },\n      onAudioEnded () {\n        // determine next song according to shuffle and repeat\n        if (this.repeatMode === REPEAT.REPEAT_ALL) {\n          if (this.shouldShuffle && this.playIndex === this.shuffledList.length - 1) {\n            this.shuffledList = this.getShuffledList()\n          }\n          this.playIndex++\n          this.thenPlay()\n        } else if (this.repeatMode === REPEAT.REPEAT_ONE) {\n          this.thenPlay()\n        } else {\n          this.playIndex++\n          if (this.playIndex !== 0) {\n            this.thenPlay()\n          } else if (this.shuffledList.length === 1) {\n            this.audio.currentTime = 0\n          }\n        }\n      },\n\n      initAudio () {\n\n        // since 1.4.0 Audio attributes as props\n\n        this.audio.controls = this.shouldShowNativeControls\n        this.audio.muted = this.muted\n        this.audio.preload = this.preload\n        this.audio.volume = this.volume\n\n\n        // since 1.4.0 Emit as many native audio events\n        // @see https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Media_events\n\n        const mediaEvents = [\n          'abort',\n          'canplay', 'canplaythrough',\n          'durationchange',\n          'emptied', 'encrypted', 'ended', 'error',\n          'interruptbegin', 'interruptend',\n          'loadeddata', 'loadedmetadata', 'loadstart',\n          'mozaudioavailable',\n          'pause', 'play', 'playing', 'progress',\n          'ratechange',\n          'seeked', 'seeking', 'stalled', 'suspend',\n          'timeupdate',\n          'volumechange',\n          'waiting',\n        ]\n        mediaEvents.forEach(event => {\n          this.audio.addEventListener(event, e => this.$emit(event, e))\n        })\n\n\n        // event handlers\n        // they don't emit native media events\n\n        this.audio.addEventListener('play', this.onAudioPlay)\n        this.audio.addEventListener('pause', this.onAudioPause)\n        this.audio.addEventListener('abort', this.onAudioPause)\n        this.audio.addEventListener('waiting', this.onAudioWaiting)\n        this.audio.addEventListener('canplay', this.onAudioCanplay)\n        this.audio.addEventListener('progress', this.onAudioProgress)\n        this.audio.addEventListener('durationchange', this.onAudioDurationChange)\n        this.audio.addEventListener('seeking', this.onAudioSeeking)\n        this.audio.addEventListener('seeked', this.onAudioSeeked)\n        this.audio.addEventListener('timeupdate', this.onAudioTimeUpdate)\n        this.audio.addEventListener('volumechange', this.onAudioVolumeChange)\n        this.audio.addEventListener('ended', this.onAudioEnded)\n\n\n        if (this.currentMusic) {\n          this.audio.src = this.currentMusic.src || this.currentMusic.url\n        }\n      },\n\n      setSelfAdaptingTheme () {\n        // auto theme according to current music cover image\n        if ((this.currentMusic.theme || this.theme) === 'pic') {\n          const pic = this.currentMusic.pic\n          // use cache\n          if (picThemeCache[pic]) {\n            this.selfAdaptingTheme = picThemeCache[pic]\n          } else {\n            try {\n              new ColorThief().getColorAsync(pic, ([r, g, b]) => {\n                picThemeCache[pic] = `rgb(${r}, ${g}, ${b})`\n                this.selfAdaptingTheme = `rgb(${r}, ${g}, ${b})`\n              })\n            } catch (e) {\n              warn('color-thief is required to support self-adapting theme')\n            }\n          }\n        } else {\n          this.selfAdaptingTheme = null\n        }\n      },\n    },\n    watch: {\n      music (music) {\n        this.internalMusic = music\n      },\n\n      currentMusic: {\n        handler (music) {\n          // async\n          this.setSelfAdaptingTheme()\n\n          const src = music.src || music.url\n          // HLS support\n          if (/\\.m3u8(?=(#|\\?|$))/.test(src)) {\n            if (this.audio.canPlayType('application/x-mpegURL') || this.audio.canPlayType('application/vnd.apple.mpegURL')) {\n              this.audio.src = src\n            } else {\n              try {\n                const Hls = require('hls.js')\n                if (Hls.isSupported()) {\n                  if (!this.hls) {\n                    this.hls = new Hls()\n                  }\n                  this.hls.loadSource(src)\n                  this.hls.attachMedia(this.audio)\n                } else {\n                  warn('HLS is not supported on your browser')\n                  this.audio.src = src\n                }\n              } catch (e) {\n                warn('hls.js is required to support m3u8')\n                this.audio.src = src\n              }\n            }\n          } else {\n            this.audio.src = src\n          }\n          // self-adapting theme color\n        },\n      },\n\n      // since 1.4.0\n      // observe controls, muted, preload, volume\n\n      shouldShowNativeControls (val) {\n        this.audio.controls = val\n      },\n      isAudioMuted (val) {\n        this.audio.muted = val\n      },\n      preload (val) {\n        this.audio.preload = val\n      },\n      audioVolume (val) {\n        this.audio.volume = val\n      },\n\n      // sync muted, volume\n\n      muted (val) {\n        this.internalMuted = val\n      },\n      volume (val) {\n        this.internalVolume = val\n      },\n\n\n      // sync shuffle, repeat\n      shuffle (val) {\n        this.internalShuffle = val\n      },\n      repeat (val) {\n        this.internalRepeat = val\n      },\n    },\n    beforeCreate () {\n      if (!VueAPlayer.disableVersionBadge && !versionBadgePrinted) {\n        // version badge\n        console.log(`\\n\\n %c Vue-APlayer ${VERSION} %c vue-aplayer.js.org \\n`, 'color: #fff; background:#41b883; padding:5px 0;', 'color: #fff; background: #35495e; padding:5px 0;')\n        versionBadgePrinted = true\n      }\n    },\n    created () {\n      this.shuffledList = this.getShuffledList()\n    },\n    mounted () {\n      this.initAudio()\n      this.setSelfAdaptingTheme()\n      if (this.autoplay) this.play()\n    },\n    beforeDestroy () {\n      if (activeMutex === this) {\n        activeMutex = null\n      }\n      if (this.hls) {\n        this.hls.destroy()\n      }\n    },\n  }\n\n  export default VueAPlayer\n\n</script>\n\n<style lang=\"scss\">\n  @import \"./scss/variables\";\n\n  .aplayer {\n    font-family: Arial, Helvetica, sans-serif;\n    color: #000;\n    background-color: #fff;\n    margin: 5px;\n    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.07), 0 1px 5px 0 rgba(0, 0, 0, 0.1);\n    border-radius: 2px;\n    overflow: hidden;\n    user-select: none;\n    line-height: initial;\n\n    * {\n      box-sizing: content-box;\n    }\n\n    .aplayer-lrc-content {\n      display: none;\n    }\n\n    .aplayer-body {\n      display: flex;\n\n      position: relative;\n      .aplayer-info {\n        flex-grow: 1;\n        display: flex;\n        flex-direction: column;\n\n        text-align: start;\n        padding: 14px 7px 0 10px;\n        height: $aplayer-height;\n        box-sizing: border-box;\n        overflow: hidden;\n\n        .aplayer-music {\n          flex-grow: 1;\n\n          overflow: hidden;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          margin-left: 5px;\n          user-select: text;\n          cursor: default;\n          padding-bottom: 2px;\n\n          .aplayer-title {\n            font-size: 14px;\n          }\n\n          .aplayer-author {\n            font-size: 12px;\n            color: #666;\n          }\n        }\n\n        .aplayer-lrc {\n          z-index: 0;\n        }\n      }\n    }\n\n    audio[controls] {\n      display: block;\n      width: 100%;\n    }\n\n    // Mini mode\n    &.aplayer-narrow {\n      width: $aplayer-height;\n    }\n\n    &.aplayer-withlrc {\n      .aplayer-body {\n        .aplayer-pic {\n          height: $aplayer-height-lrc;\n          width: $aplayer-height-lrc;\n        }\n\n        .aplayer-info {\n          height: $aplayer-height-lrc;\n        }\n\n        .aplayer-info {\n          padding: 10px 7px 0 7px;\n        }\n      }\n    }\n\n    &.aplayer-withlist {\n      .aplayer-body {\n        .aplayer-info {\n          border-bottom: 1px solid #e9e9e9;\n        }\n\n        .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-menu {\n          display: block;\n        }\n      }\n    }\n\n    /* floating player on top */\n    position: relative;\n    &.aplayer-float {\n      z-index: 1;\n    }\n  }\n\n  @keyframes aplayer-roll {\n    0% {\n      left: 0\n    }\n    100% {\n      left: -100%\n    }\n  }\n</style>"],"sourceRoot":"node_modules/vue-aplayer/src"}]}