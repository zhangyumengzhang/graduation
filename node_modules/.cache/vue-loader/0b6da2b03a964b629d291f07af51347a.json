{"remainingRequest":"D:\\2021graduate\\graduation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\2021graduate\\graduation\\src\\views\\myaudio.vue?vue&type=style&index=0&id=11e40380&lang=stylus&scoped=true&","dependencies":[{"path":"D:\\2021graduate\\graduation\\src\\views\\myaudio.vue","mtime":1611502915899},{"path":"D:\\2021graduate\\graduation\\node_modules\\css-loader\\dist\\cjs.js","mtime":1594033219529},{"path":"D:\\2021graduate\\graduation\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1594033220124},{"path":"D:\\2021graduate\\graduation\\node_modules\\postcss-loader\\src\\index.js","mtime":1594033219961},{"path":"D:\\2021graduate\\graduation\\node_modules\\stylus-loader\\index.js","mtime":1611499002260},{"path":"D:\\2021graduate\\graduation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594033213228},{"path":"D:\\2021graduate\\graduation\\node_modules\\vue-loader\\lib\\index.js","mtime":1594033220124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5yZWNvbW1lbmQtbXVzaWMgew0KICAudGl0bGUgew0KICAgIG1hcmdpbjogMCAwIDE1cHggMDsNCiAgfQ0KfQ0K"},{"version":3,"sources":["myaudio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA","file":"myaudio.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"recommend-music\">\r\n    <h2 class=\"title\">推荐新歌曲</h2>\r\n    <song-list :songList=\"songs\"></song-list>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport songList from '../components/common/songList/Index'\r\nimport { createSong } from '@/model/song'\r\nexport default {\r\n  data () {\r\n    return {\r\n      songs: []\r\n    }\r\n  },\r\n  components: {\r\n    songList\r\n  },\r\n  // 监听属性 类似于data概念\r\n  computed: {},\r\n  // 监控data中的数据变化\r\n  watch: {},\r\n  // 方法集合\r\n  methods: {\r\n    // 获取推荐新音乐\r\n    async getNewSongs () {\r\n      try {\r\n        const res = await this.$api.getNewSongs()\r\n        const list = []\r\n        if (res.code === 200) {\r\n          res.result.map(item => {\r\n            list.push(item.id)\r\n          })\r\n          this.getSongDetail(list)\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    },\r\n    // 获取歌曲列表\r\n    async getSongDetail (sliceArr) {\r\n      const timestamp = new Date().valueOf()\r\n      sliceArr = sliceArr.join(',')\r\n      try {\r\n        const res = await this.$api.getSongDetail(sliceArr, timestamp)\r\n        this.songs = this._normalizeSongs(res.songs)\r\n        console.log(this.songs)\r\n      } catch (error) {\r\n      }\r\n    },\r\n    // 处理歌曲\r\n    _normalizeSongs (list) {\r\n      const ret = []\r\n      list.map(item => {\r\n        if (item.id) {\r\n          ret.push(createSong(item))\r\n        }\r\n      })\r\n      return ret\r\n    }\r\n  },\r\n  // 生命周期 - 创建完成（可以访问当前this实例）\r\n  created () {},\r\n  // 生命周期 - 挂载完成（可以访问DOM元素）\r\n  mounted () {\r\n    this.getNewSongs()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.recommend-music {\r\n  .title {\r\n    margin: 0 0 15px 0;\r\n  }\r\n}\r\n</style>\r\n"]}]}