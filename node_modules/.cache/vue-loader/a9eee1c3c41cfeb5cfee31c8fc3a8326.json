{"remainingRequest":"D:\\2020summer\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\2020summer\\vue_shop\\src\\views\\data\\data.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\2020summer\\vue_shop\\src\\views\\data\\data.vue","mtime":1594453691794},{"path":"D:\\2020summer\\vue_shop\\node_modules\\css-loader\\dist\\cjs.js","mtime":1594033219529},{"path":"D:\\2020summer\\vue_shop\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1594033220124},{"path":"D:\\2020summer\\vue_shop\\node_modules\\postcss-loader\\src\\index.js","mtime":1594033219961},{"path":"D:\\2020summer\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594033213228},{"path":"D:\\2020summer\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1594033220124}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi53cmFwcGVyIHsNCiAgICB3aWR0aDogNTAwcHg7DQogICAgaGVpZ2h0OiAzNTBweDsNCn0NCg0KLnNjaGFydCB7DQoNCiAgICB3aWR0aDogMTAwJTsNCg0KICAgIGhlaWdodDogMzAwcHg7DQoNCn0NCg0K"},{"version":3,"sources":["data.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA","file":"data.vue","sourceRoot":"src/views/data","sourcesContent":["<template>\r\n    <div id=\"app\">\r\n      <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <div>\r\n        <el-breadcrumb-item>数据统计</el-breadcrumb-item>\r\n        <el-breadcrumb-item>数据报表</el-breadcrumb-item>\r\n      </div>\r\n    </el-breadcrumb>\r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>数据报表</span>\r\n      </div>\r\n      <div>\r\n         <el-row :gutter=\"25\">\r\n            <el-col :span=\"12\">\r\n                <el-card shadow=\"hover\" class=\"wrapper\">\r\n                    <schart class=\"schart\" canvasId=\"bar\" :options=\"options\"></schart>\r\n                </el-card>\r\n\r\n            </el-col>\r\n            <el-col :span=\"12\">\r\n                <el-card shadow=\"hover\" class=\"wrapper\">\r\n                    <schart class=\"schart\" canvasId=\"line\" :options=\"options1\"></schart>\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n      </div>\r\n    </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Schart from './vue-schart'\r\nexport default {\r\n  name: 'app',\r\n  data () {\r\n    return {\r\n      options: {\r\n        type: 'bar',\r\n        title: {\r\n          text: '最近一周图书销量TOP'\r\n        },\r\n        bgColor: '#fff',\r\n        labels: ['this.bookname[0]', 'this.bookname[1]'],\r\n        datasets: [\r\n          {\r\n            label: '销量',\r\n            fillColor: 'rgba(241, 49, 74, 0.5)',\r\n            data: ['2', '30']\r\n          }\r\n        ]\r\n      },\r\n      options1: {\r\n        type: 'line',\r\n        title: {\r\n          text: '一周店铺销量变化'\r\n        },\r\n        bgColor: '#fff',\r\n        labels: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n\r\n        datasets: [\r\n          {\r\n            label: '销量',\r\n\r\n            fillColor: 'rgba(241, 49, 74, 0.5)',\r\n\r\n            data: this.shoplist\r\n          }\r\n        ]\r\n      },\r\n      shoplist: [],\r\n      booklist: [],\r\n      bookname: []\r\n    }\r\n  },\r\n  created () {\r\n    this.selectStoreTop()\r\n    this.storeOrderSum()\r\n  },\r\n  methods: {\r\n    async selectStoreTop () {\r\n      const { data: res } = await this.axios.post('/selectStoreTop', {\r\n        // store_id: window.sessionStorage.getItem('storeid')\r\n        store_id: 1\r\n      })\r\n      if (res.status !== '1') return this.$message.error('获取图书top失败')\r\n      this.$message.success('获取图书TOP成功')\r\n      console.log(res)\r\n      const data = res.data\r\n      const props = Object.keys(data)\r\n      console.log(props)\r\n      props.forEach(prop => {\r\n        this.bookname[prop] = data[prop].bookname\r\n      })\r\n      console.log(this.bookname)\r\n    },\r\n    async storeOrderSum () {\r\n      const { data: res } = await this.axios.post('/storeOrderSum', {\r\n        // store_id: window.sessionStorage.getItem('storeid')\r\n        store_id: 1\r\n      })\r\n      if (res.status !== '1') return this.$message.error('获取销量失败')\r\n      this.$message.success('获取销量成功')\r\n      console.log(res)\r\n      for (const item of res.data) {\r\n        this.shoplist.push(parseInt(item.销量))\r\n      }\r\n      console.log(this.shoplist)\r\n    }\r\n  },\r\n  components: {\r\n    Schart\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.wrapper {\r\n    width: 500px;\r\n    height: 350px;\r\n}\r\n\r\n.schart {\r\n\r\n    width: 100%;\r\n\r\n    height: 300px;\r\n\r\n}\r\n\r\n</style>\r\n"]}]}